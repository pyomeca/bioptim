name: Run the tests

on: [pull_request]

env:
  PREFIX_LINUX: /usr/share/miniconda3/envs/bioptim

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        shard: [1, 2, 3, 4, 5, 6]
    name: Tests on ${{ matrix.os }}-shard ${{ matrix.shard }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Set prefix Linux
        run: echo "PREFIX=${{ env.PREFIX_LINUX }}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
          use-mamba: true
          activate-environment: bioptim
          environment-file: environment.yml

      - name: Print mamba info
        run: |
          conda info
          conda list

      - name: Install extra dependencies
        run: | 
          conda install pytest-cov black pytest pytest-cov codecov packaging pytest-mpl -cconda-forge
          sudo apt install -y librhash-dev

      - name: Install ACADOS on Linux
        run: |
          pwd
          cd external
          ./acados_install_linux.sh 4 ${{ env.PREFIX_LINUX }}
          cd ..
        if: matrix.shard == 1

      - name: Test installed version of bioptim
        run: |
          python setup.py install
          cd
          python -c "import bioptim"
        if: matrix.shard == 1

      - name: Run tests with code coverage
        run: pytest -v --color=yes --cov-report term-missing --cov=bioptim tests/shard${{ matrix.shard }} --mpl-baseline-path=bioptim/tests/plot_reference_images
        if: matrix.os == 'ubuntu-latest'
      
      - name: Archive coverage report
        id: archive
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.shard }}
          path: .coverage
          if-no-files-found: error
          include-hidden-files: true

  merge-coverage:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Set prefix Linux
        run:
            echo "PREFIX=${{ env.PREFIX_LINUX }}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install extra dependencies
        run: |
          sudo apt install -y python3-pip
          pip3 install coverage

      - name: Download all workflow run artifacts
        id: download
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*

      - name: Rename coverage files
        run: |
          for shard in {1,2,3,4,5,6}; do
            mv coverage-${shard}/.coverage .coverage${shard}
          done

      - name: Merge coverage reports
        run: coverage combine .coverage1 .coverage2 .coverage3 .coverage4 .coverage5 .coverage6

      - name: Generate XML report
        run: |
          coverage xml
          coverage report -m

      - uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: true
          verbose: true
